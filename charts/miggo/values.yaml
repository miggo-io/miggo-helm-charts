# -- Docker registry settings
image:
  # -- Registry host for all images
  registry: registry.miggo.io
  # -- Image pull policy for all images
  pullPolicy: IfNotPresent

## -- List of secrets to use for pulling images from authenticated repositories
imagePullSecrets: []
  # -- Name of the image pull secret
  # - name: ""

miggo:
  # -- Name of the Kubernetes cluster
  clusterName: "kubernetes-cluster"

healthcheck:
  # -- Port number for health check endpoints
  port: 6666

config:
  # -- The Kubernetes platform acronym. Allowed values are:
  # - gke: Google Kubernetes Engine
  # - openshift: Red Hat OpenShift/OCP
  platform: ""
  metrics:
    # -- Interval for metrics collection
    interval: 60s

  # -- Client ID for authentication
  clientId: P2UjsJwOFdIeUAtW0pGTJ5SeJAlq

  # -- Access key for authentication (ignored when accessKeySecret is specified)
  accessKey: ""

  # -- Name of the secret containing the access key. Leave empty to create default secrets based on config.accessKey
  accessKeySecret: ""

  # -- List of namespaces that are allowed to be processed
  # If empty, all namespaces are included by default (before applying deniedNamespaces)
  # Example: ["development", "staging", "production"]
  allowedNamespaces:

  # -- List of namespaces that should be excluded from processing
  # Takes precedence over allowedNamespaces - if a namespace is both allowed and denied,
  # it will be denied
  # Example: ["test", "deprecated"]
  deniedNamespaces:

  # -- When set to true, includes system namespaces like kube-system etc.
  # When false (default), automatically adds system namespaces to deniedNamespaces
  # It's recommended to keep this false unless you specifically need to operate on system namespaces
  includeSystemNamespaces: false

output:
  # -- Enable stdout logging (for debugging)
  stdout: false

  otlp:
    # -- OTLP endpoint URL
    otlpEndpoint: "https://api.miggo.io"
    # -- Skip TLS verification
    tlsSkipVerify: false

  api:
    # -- Decide whether to communicate with Miggo Api
    enabled: true
    # -- Miggo Api endpoint (defaults to otlp endpoint)
    apiEndpoint: ""

serviceAccount:
  # -- Automatically mount API credentials for the service account
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- Name of the service account. If not set, a name is generated
  name: ""

# -- Global labels to add to all resources
labels: {}
# -- Global annotations to add to all resources
annotations: {}
# -- Pod annotations to add to all pods
podAnnotations: {}
# -- Pod labels to add to all pods
podLabels: {}
# -- Pod security context for all pods
podSecurityContext: {}
# -- Container security context for all containers
securityContext: {}
# -- Additional environment variables for all containers
extraEnvs: []
# -- Additional environment variables from sources for all containers
extraEnvsFrom: []
# -- Additional volumes for all pods
volumes: []
# -- Additional volume mounts for all containers
volumeMounts: []
# -- Node selector for all pods
nodeSelector: {}
# -- Tolerations for all pods
tolerations: []
# -- Pod affinity settings for all pods
affinity: {}

miggoWatch:
  # -- Enable Miggo Watch component
  enabled: true
  # -- Component-specific labels
  labels: {}
  # -- Component-specific annotations
  annotations: {}
  # -- Component-specific pod annotations
  podAnnotations: {}
  # -- Component-specific pod labels
  podLabels: {}
  # -- Additional environment variables
  extraEnvs: []
  # -- Additional environment variables from sources
  extraEnvsFrom: []
  # -- Additional volumes
  volumes: []
  # -- Additional volume mounts
  volumeMounts: []

  image:
    # -- Image repository
    repository: miggo/miggo-watch
    # -- Image tag (defaults to Chart appVersion if not set)
    tag:
    # -- Optional full image path override. If set, takes precedence over registry/repository/tag settings.
    # Useful for local development with Minikube or when needing to specify a complete custom image path
    fullPath:
    # -- Image pull policy. Specifies when Kubernetes should pull the container image
    pullPolicy:

  config:
    # -- Interval for scanning Kubernetes resources
    interval: 6h
    # -- Disable compression for data transfer
    disableCompression: false
    # -- Exclude those components from the report (comma separated list of persistent-volume-claim daemon-set stateful-set ingress ingress-class http-route network-policy namespace service-account persistent-volume cron-job node deployment job replica-set gateway-class pod service)
    exclude: "pod,replica-set"

  # -- When enabled, the chart will set the GOMEMLIMIT env var to 80% of the
  # configured resources.limits.memory. If no resources.limits.memory are
  # defined then enabling does nothing. It is HIGHLY recommend to enable this
  # setting and set a value for resources.limits.memory.
  useGOMEMLIMIT: true

  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 128Mi

miggoScanner:
  # -- Enable Miggo Scanner component
  enabled: true
  # -- Component-specific labels
  labels: {}
  # -- Component-specific annotations
  annotations: {}
  # -- Component-specific pod annotations
  podAnnotations: {}
  # -- Component-specific pod labels
  podLabels: {}
  # -- Additional environment variables
  extraEnvs: []
  # -- Additional environment variables from sources
  extraEnvsFrom: []
  # -- Additional volumes
  volumes: []
  # -- Additional volume mounts
  volumeMounts: []

  image:
    # -- Image repository
    repository: miggo/miggo-scanner
    # -- Image tag (defaults to Chart appVersion if not set)
    tag:
    # -- Optional full image path override. If set, takes precedence over registry/repository/tag settings.
    # Useful for local development with Minikube or when needing to specify a complete custom image path
    fullPath:
    # -- Image pull policy. Specifies when Kubernetes should pull the container image
    pullPolicy:

  config:
    # -- Max limit of the processing queue
    queueSize: 10000
    # -- Disable compression for data transfer
    disableCompression: false

    cache:
      # -- Interval for cache flushing (0 to disable)
      flushInterval: "168h"
      # -- Maximum number of entries in cache
      maxEntries: 10000

      configMap:
        # -- Enable persisted ConfigMap based cache
        enabled: true
        # -- Name of the ConfigMap (generated if not set)
        name: ""

  # -- When enabled, the chart will set the GOMEMLIMIT env var to 80% of the
  # configured resources.limits.memory. If no resources.limits.memory are
  # defined then enabling does nothing. It is HIGHLY recommend to enable this
  # setting and set a value for resources.limits.memory.
  useGOMEMLIMIT: true

  resources:
    limits:
      cpu: 3000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi

miggoRuntime:
  # -- Install eBPF agent on each cluster node to provide package-level
  # reachability analysis and other runtime insights.
  enabled: false
  # -- Kubernetes cluster domain
  kubernetesClusterDomain: ""
  # -- Enable tracing network connections.
  enableNetworkTracing: false
  # -- Enable tracing file access.
  enableFileAccessTracing: false
  # -- Additional environment variables
  extraEnvs: []
  # -- Additional environment variables from sources
  extraEnvsFrom: []
  volumes: []
  # -- Additional volume mounts for all containers
  volumeMounts: []

  image:
    # -- Image repository
    repository: miggo/miggo-runtime
    # -- Image tag (defaults to Chart appVersion if not set)
    tag:
    # -- Optional full image path override. If set, takes precedence over registry/repository/tag settings.
    # Useful for local development with Minikube or when needing to specify a complete custom image path
    fullPath:
    # -- Image pull policy. Specifies when Kubernetes should pull the container image
    pullPolicy:

  # -- Node selector settings
  nodeSelector:
    kubernetes.io/os: linux

  # -- When enabled, the chart will set the GOMEMLIMIT env var to 80% of the
  # configured resources.limits.memory. If no resources.limits.memory are
  # defined then enabling does nothing. It is HIGHLY recommend to enable this
  # setting and set a value for resources.limits.memory.
  useGOMEMLIMIT: true

  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 512Mi

  securityContext:
    privileged: true

  # -- Use the host's pid namespace.
  hostPID: true
  # -- Use the host's ipc namespace.
  hostIPC: true

  profiler:
    # -- Install profiler on each cluster node to provide function-level
    # reachability analysis and other runtime insights.
    enabled: false
    image:
      # -- Image repository
      repository: miggo/miggo-profiler
      # -- Image tag (defaults to Chart appVersion if not set)
      tag:
      # -- Optional full image path override. If set, takes precedence over registry/repository/tag settings.
      # Useful for local development with Minikube or when needing to specify a complete custom image path
      fullPath:
      # -- Image pull policy. Specifies when Kubernetes should pull the container image
      pullPolicy:

    # -- When enabled, the chart will set the GOMEMLIMIT env var to 80% of the
    # configured resources.limits.memory. If no resources.limits.memory are
    # defined then enabling does nothing. It is HIGHLY recommend to enable this
    # setting and set a value for resources.limits.memory.
    useGOMEMLIMIT: true

    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 512Mi

    securityContext:
      privileged: true
      allowPrivilegeEscalation: true
      capabilities:
        add:
          - SYS_ADMIN

    # -- Set the reporter's interval in seconds.
    reporterInterval: 5s
    # -- Set the frequency (in Hz) of stack trace sampling.
    samplesPerSecond: 20
    # -- Set the monitor interval in seconds.
    monitorInterval: 5s

    # -- If set to a value between 1 and 999 will enable off-cpu profiling:
    # Every time an off-cpu entry point is hit, a random number between 0 and
    # 999 is chosen. If the given threshold is greater than this random number,
    # the off-cpu trace is collected and reported.
    offCpuThreshold: 1000
    # --  If set to a value between 1 and 99 will enable probabilistic
    # profiling: every probabilistic-interval a random number between 0 and 99
    # is chosen. If the given probabilistic-threshold is greater than this
    # random number, the agent will collect profiles from this system for the
    # duration of the interval.
    probabilisticThreshold: 100
    # -- Time interval for which probabilistic profiling will be enabled or disabled.
    probabilisticInterval: 1m0s

  analyzer:
    # -- Install analyzer on each cluster node to provide endpoint URL to
    # functions mapping and other runtime insights.
    enabled: false
    image:
      # -- Image repository
      repository: miggo/miggo-analyzer
      # -- Image tag (defaults to Chart appVersion if not set)
      tag:
      # -- Optional full image path override. If set, takes precedence over registry/repository/tag settings.
      # Useful for local development with Minikube or when needing to specify a complete custom image path
      fullPath:
      # -- Image pull policy. Specifies when Kubernetes should pull the container image
      pullPolicy:

    # -- When enabled, the chart will set the GOMEMLIMIT env var to 80% of the
    # configured resources.limits.memory. If no resources.limits.memory are
    # defined then enabling does nothing. It is HIGHLY recommend to enable this
    # setting and set a value for resources.limits.memory.
    useGOMEMLIMIT: true

    resources:
      requests:
        cpu: 100m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 512Mi

    securityContext:
      privileged: true

    healthcheck:
      # -- Port number for health check endpoints
      port: 6667

miggoCollector:
  # -- Enable Collector component
  enabled: true
  # -- Number of replicas to run (relevant only if instancePerNode: false)
  replicas: 1
  # -- Run an instance per node
  instancePerNode: false
  # -- Component-specific labels
  labels: {}
  # -- Component-specific annotations
  annotations: {}
  # -- Component-specific pod annotations
  podAnnotations: {}
  # -- Component-specific pod labels
  podLabels: {}
  # -- Additional environment variables
  extraEnvs: []
  # -- Additional environment variables from sources
  extraEnvsFrom: []
  # -- Additional volumes
  volumes: []
  # -- Additional volume mounts
  volumeMounts: []
  # -- InitContainers to initialize the pod
  initContainers: []
  # -- An internal locaiton to mount the access key file within the container
  accessKeyMountLocation: /etc/miggo-access-key

  image:
    # -- Image repository
    repository: miggo/miggo-collector
    # -- Image tag (defaults to Chart appVersion if not set)
    tag:
    # -- Optional full image path override. If set, takes precedence over registry/repository/tag settings.
    # Useful for local development with Minikube or when needing to specify a complete custom image path
    fullPath:
    # -- Image pull policy. Specifies when Kubernetes should pull the container image
    pullPolicy:

  config:
    # -- Log verbosity level (detailed|normal|basic)
    logVerbosity: basic

  # -- When enabled, the chart will set the GOMEMLIMIT env var to 80% of the
  # configured resources.limits.memory. If no resources.limits.memory are
  # defined then enabling does nothing. It is HIGHLY recommend to enable this
  # setting and set a value for resources.limits.memory.
  useGOMEMLIMIT: true

  # -- Resource requirements
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 10m
      memory: 200Mi

  service:
    # -- Service type
    type: ClusterIP
    # -- Service annotations
    annotations: {}
    # -- Service labels
    labels: {}
    # -- Service ports
    ports:
      - protocol: TCP
        port: 4318
        targetPort: 4318
        name: http
      - protocol: TCP
        port: 4317
        targetPort: 4317
        name: grpc
