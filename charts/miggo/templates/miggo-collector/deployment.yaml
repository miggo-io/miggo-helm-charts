{{ if .Values.miggoCollector.enabled }}
apiVersion: apps/v1
kind: {{ if .Values.miggoCollector.instancePerNode }}DaemonSet{{ else }}Deployment{{ end }}
metadata:
  name: {{ include "miggo.fullname" . }}-collector
  labels:
    {{- include "miggo-collector.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- tpl (toYaml .) $ | nindent 4 }}
    {{- end }}
    {{- with .Values.miggoCollector.labels }}
    {{- tpl (toYaml .) $ | nindent 4 }}
    {{- end }}
  annotations:
  {{- with .Values.annotations }}
    {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  {{- with .Values.miggoCollector.annotations }}
    {{- tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
spec:
  {{ if not .Values.miggoCollector.instancePerNode }}
  replicas: {{ .Values.miggoCollector.replicas }}
  {{ end }}
  selector:
    matchLabels:
      {{- include "miggo-collector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/miggo-collector/collector-config-cm.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
        {{- with .Values.miggoCollector.podAnnotations }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
      labels:
        component: collector
        miggo.io/app: {{ include "miggo.fullname" . }}-collector
        {{- include "miggo-collector.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
        {{- with .Values.miggoCollector.podLabels }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
        {{- with .Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "miggoImagePullSecrets" . | nindent 8 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "miggo.serviceAccountName" . }}-collector
      initContainers:
      {{- if .Values.miggoCollector.initContainers }}
        {{ toYaml .Values.miggoCollector.initContainers | nindent 8 }}
      {{- end }}
        - name: collector-init-container
          {{- if .Values.miggoCollector.image.fullPath }}
          image: "{{ .Values.miggoCollector.image.fullPath }}"
          {{- else }}
          image: "{{ .Values.image.registry }}/{{ .Values.miggoCollector.image.repository }}:{{ .Values.miggoCollector.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.miggoCollector.image.pullPolicy | default .Values.image.pullPolicy }}
          command: ["/bin/sh"]
          args:
            - -c
            - |
              bash /etc/collector-cm/collector-init-script.sh
          envFrom:
          {{- with .Values.extraEnvsFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.miggoCollector.extraEnvsFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: CLIENT_ID
              value: {{ .Values.config.clientId }}
            - name: ACCESS_KEY_MOUNT_LOCATION
              value: {{ .Values.miggoCollector.accessKeyMountLocation }}
          {{- with .Values.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.miggoCollector.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: collector-config-cm
              mountPath: /etc/collector-cm
            - name: collector-config
              mountPath: /etc/collector
          {{ if (include "accessKeySecret" .) }}
            - name: access-key
              mountPath: {{ .Values.miggoCollector.accessKeyMountLocation }}
              subPath: ACCESS_KEY
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.miggoCollector.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      containers:
        - name: miggo-collector
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.miggoCollector.image.fullPath }}
          image: "{{ .Values.miggoCollector.image.fullPath }}"
          {{- else }}
          image: "{{ .Values.image.registry }}/{{ .Values.miggoCollector.image.repository }}:{{ .Values.miggoCollector.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.miggoCollector.image.pullPolicy | default .Values.image.pullPolicy }}
          args:
            - --config
            - /etc/collector/config.yaml
            {{- if .Values.miggoRuntime.profiler.enabled }}
            - --feature-gates
            - service.profilesSupport
            {{- end }}
          envFrom:
          {{- with .Values.extraEnvsFrom }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.miggoCollector.extraEnvsFrom }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          {{- if and (.Values.miggoCollector.useGOMEMLIMIT) ((((.Values.miggoCollector.resources).limits).memory))  }}
            - name: GOMEMLIMIT
              value: {{ include "gomemlimit" .Values.miggoCollector.resources.limits.memory | quote }}
          {{- end }}
          {{- with .Values.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.miggoCollector.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.miggoCollector.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.healthcheck.port }}
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.healthcheck.port }}
            periodSeconds: 10
          volumeMounts:
          - name: collector-config
            mountPath: /etc/collector
          {{ if (include "accessKeySecret" .) }}
          - name: access-key
            mountPath: {{ .Values.miggoCollector.accessKeyMountLocation }}
            subPath: ACCESS_KEY
          {{- end }}
          {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.miggoCollector.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
      - name: collector-config
        emptyDir: {}
      - name: collector-config-cm
        configMap:
          name: collector-config-cm
      {{ if (include "accessKeySecret" .) }}
      - name: access-key
        secret:
          secretName: {{ include "accessKeySecret" . }}
          items:
          - key: ACCESS_KEY
            path: ACCESS_KEY
      {{- end }}
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.miggoCollector.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
