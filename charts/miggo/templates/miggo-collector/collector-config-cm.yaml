{{ if .Values.miggoCollector.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config-cm
data:
  config.yaml: |
    extensions:
      health_check:
        endpoint: 0.0.0.0:{{ .Values.healthcheck.port }}
      oauth2client:
        client_id: {{ .Values.config.clientId }}
        client_secret_file: {{ .Values.miggoCollector.accessKeyMountLocation }}
        token_url: https://api.descope.com/oauth2/v1/token
        timeout: 1m

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:4318"

      prometheus:
        config:
          scrape_configs:
            - job_name: 'collector'
              scrape_interval: {{ .Values.config.metrics.interval }}
              static_configs:
                - targets: [ 'localhost:8888' ]
              metric_relabel_configs:
                - source_labels: [__name__]
                  regex: 'otelcol_(.*)'
                  target_label: __name__
                  replacement: 'miggocol_$1'
                - target_label: "tenant_id"
                  replacement: "{{ .Values.miggo.tenantId }}"
                - target_label: "project_id"
                  replacement: "{{ .Values.miggo.projectId }}"
                - target_label: "miggo_name"
                  replacement: "{{ .Values.miggo.clusterName }}"

    processors:
      batch:
        timeout: 10s

    exporters:

      debug:
        verbosity: {{ .Values.config.logVerbosity }}

      prometheus:
        endpoint: 0.0.0.0:8889

      otlphttp:
        traces_endpoint: {{ .Values.output.otlp.otlpEndpoint }}/v1/traces
        metrics_endpoint: {{ .Values.output.otlp.otlpEndpoint }}/v1/metrics
        logs_endpoint: {{ .Values.output.otlp.otlpEndpoint }}/v1/logs
        auth:
          authenticator: oauth2client
      {{- if .Values.miggoRuntime.profiler.enabled }}
      otlphttp/profiles:
        endpoint: {{ .Values.output.otlp.otlpEndpoint }}
        auth:
          authenticator: oauth2client
      {{- end }}

    service:
      extensions: [health_check, oauth2client]
      pipelines:
        {{- if .Values.miggoRuntime.profiler.enabled }}
        profiles:
          receivers: [otlp]
          exporters: [otlphttp/profiles]
        {{- end }}
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch]
          exporters: [debug, prometheus, otlphttp]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [debug, otlphttp]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [debug, otlphttp]
{{ end }}
