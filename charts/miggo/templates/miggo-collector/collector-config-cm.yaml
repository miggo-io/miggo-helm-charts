{{ if .Values.miggoCollector.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config-cm
data:
  collector-init-script.sh: |
    {{ .Files.Get "files/collector-init-script.sh" | nindent 4 }}

  config-template.yaml: |
    extensions:
      health_check:
        endpoint: 0.0.0.0:{{ .Values.healthcheck.port }}
      oauth2client:
        client_id: {{ .Values.config.clientId }}
        client_secret_file: {{ .Values.miggoCollector.accessKeyMountLocation }}
        token_url: https://auth.miggo.io/oauth2/v1/token
        timeout: 1m

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:4318"

      prometheus:
        config:
          scrape_configs:
            - job_name: 'collector'
              scrape_interval: {{ .Values.config.metrics.interval }}
              static_configs:
                - targets: [ 'localhost:8888' ]
              metric_relabel_configs:
                - source_labels: [__name__]
                  regex: 'otelcol_(.*)'
                  target_label: __name__
                  replacement: 'miggocol_$1'
                - target_label: "tenant-id"
                  replacement: "${MIGGO_TENANT_ID}"
                - target_label: "project-id"
                  replacement: "${MIGGO_PROJECT_ID}"
                - target_label: "miggo-name"
                  replacement: "{{ .Values.miggo.clusterName }}"
                - target_label: "node-name"
                  replacement: "${env:NODE_NAME}"
                - target_label: "deployment-type"
                  replacement: "{{ if .Values.miggoCollector.instancePerNode }}daemonset{{ else }}deployment{{ end }}"

    processors:
      resource:
        attributes:
          - key: project
            value: "${MIGGO_PROJECT_ID}"
            action: insert
          - key: tenant
            value: "${MIGGO_TENANT_ID}"
            action: insert

      attributes:
        actions:
          - key: project
            value: "${MIGGO_PROJECT_ID}"
            action: insert
          - key: tenant
            value: "${MIGGO_TENANT_ID}"
            action: insert

      resource/metrics:
        attributes:
          - key: project-id
            value: "${MIGGO_PROJECT_ID}"
            action: insert
          - key: tenant-id
            value: "${MIGGO_TENANT_ID}"
            action: insert

      attributes/metrics:
        actions:
          - key: project-id
            value: "${MIGGO_PROJECT_ID}"
            action: insert
          - key: tenant-id
            value: "${MIGGO_TENANT_ID}"
            action: insert

      metricstransform:
        transforms:
          - include: miggocol_process_uptime
            match_type: strict
            new_name: miggo_component_status
            action: combine
            operations:
              - action: add_label
                new_label: component
                new_value: Miggo Collector
              - action: add_label
                new_label: chart_version
                new_value: {{ .Chart.Version }}

      batch/metrics:
        timeout: 10s

      batch/logs:
        timeout: 10s

      batch/traces:
        timeout: 10s

    exporters:
      debug:
        verbosity: {{ .Values.config.logVerbosity }}

      prometheus:
        endpoint: 0.0.0.0:8889

      otlphttp:
        traces_endpoint: {{ .Values.output.otlp.otlpEndpoint }}/v1/traces
        metrics_endpoint: {{ .Values.output.otlp.otlpEndpoint }}/v1/metrics
        logs_endpoint: {{ .Values.output.otlp.otlpEndpoint }}/v1/logs
        auth:
          authenticator: oauth2client
      {{- if .Values.miggoRuntime.profiler.enabled }}
      otlphttp/profiles:
        endpoint: {{ .Values.output.otlp.otlpEndpoint }}
        auth:
          authenticator: oauth2client
      {{- end }}

    service:
      telemetry:
        metrics:
          level: detailed
          readers:
          - pull:
              exporter:
                prometheus:
                  host: "0.0.0.0"
                  port: 8888
      extensions: [health_check, oauth2client]
      pipelines:
        {{- if .Values.miggoRuntime.profiler.enabled }}
        profiles:
          receivers: [otlp]
          exporters: [otlphttp/profiles]
        {{- end }}
        metrics/sensors:
          receivers: [otlp]
          processors: [batch/metrics, resource/metrics, attributes/metrics]
          exporters: [debug, prometheus, otlphttp]
        metrics/collector:
          receivers: [prometheus]
          processors: [batch/metrics, metricstransform, resource/metrics, attributes/metrics]
          exporters: [debug, prometheus, otlphttp]
        traces:
          receivers: [otlp]
          processors: [batch/traces, resource, attributes]
          exporters: [debug, otlphttp]
        logs:
          receivers: [otlp]
          processors: [batch/logs, resource, attributes]
          exporters: [debug, otlphttp]
{{ end }}
