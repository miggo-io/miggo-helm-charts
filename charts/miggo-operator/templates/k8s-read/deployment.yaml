{{ if .Values.k8sread.enabled  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.manager.deploymentAnnotations }}
  {{- with .Values.k8sread.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  name: k8s-read
  labels:
    app: k8s-read
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-read
  template:
    metadata:
      {{- if .Values.manager.podAnnotations }}
      {{- with .Values.k8sread.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 4 }}
      {{- end }}
      {{- end }}
      labels:
        app: k8s-read
    spec:
      {{- include "imagePullSecrets" . | nindent 6 }}
      serviceAccountName: k8s-read-sa
      containers:
      - name: k8s-read
        image: "{{ .Values.k8sread.image.repository }}:{{ .Values.k8sread.image.tag }}"
        imagePullPolicy: {{ .Values.k8sread.imagePullPolicy }}
        args:
          - --cluster-name={{ .Values.k8sread.clusterName }}
          - --tenant-name={{ .Values.miggo.tenantId }}
          - --project-name={{ .Values.miggo.projectId }}
          - --otlp-endpoint={{ if .Values.k8sread.otlp.otlpEndpoint }}{{ .Values.k8sread.otlp.otlpEndpoint }}{{ else }}{{ include "collectorAddress" . }}:{{ .Values.k8sread.otlp.otlpPort }}{{ end }}
          - --tls-skip-verify={{ .Values.k8sread.otlp.tlsSkipVerify }}
          - --stdout={{ .Values.k8sread.stdout }}
          - --interval={{ .Values.k8sread.interval }}
          - --port={{ .Values.k8sread.healthcheck.port }}
        {{- if .Values.k8sread.otlp.existingSecret }}
        envFrom:
        - secretRef:
            name: {{ .Values.k8sread.otlp.existingSecret }}
        {{- else }}
        envFrom:
        - secretRef:
            name: k8s-secret
        {{- end }}
        ports:
        - containerPort: {{ .Values.k8sread.healthcheck.port }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.k8sread.healthcheck.port }}
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.k8sread.healthcheck.port }}
          periodSeconds: 10
        resources: {{ toYaml .Values.k8sread.resources | nindent 12 }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{ toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
{{ end }}
